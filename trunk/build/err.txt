Lint at line 31 character 20: Use the object literal notation {}.
this.config = new Object();

Lint at line 33 character 21: Use the array literal notation [].
this.strings = new Array();

Lint at line 34 character 21: Use the array literal notation [].
this.memory  = new Array();

Lint at line 35 character 21: Use the array literal notation [].
this.areas   = new Array();

Lint at line 36 character 21: Use the array literal notation [].
this.props   = new Array();

Lint at line 37 character 22: Use the array literal notation [].
this.logStore = new Array();

Lint at line 38 character 21: Use the array literal notation [].
this.digits  = new Array(10);

Lint at line 41 character 27: Use the array literal notation [].
this.loadedScripts = new Array();

Lint at line 71 character 37: Use the array literal notation [].
this.config.buttons          = new Array('add','delete','preview','html');

Lint at line 72 character 37: Use the array literal notation [].
this.config.button_callbacks = new Array();

Lint at line 106 character 14: Missing '{' before 'this'.
if (config) this.setup(config);

Lint at line 124 character 2: Missing ';'
}

Lint at line 164 character 12: Identifier 'i' already declared as var*
for (var i=0; i<bases.length; i++) {

Lint at line 165 character 22: Use '!==' to compare with ''.
if (bases[i].href != '') {

Lint at line 168 character 44: Missing '{' before 'base'.
if (base.charAt(base.length-1) != '/') base+='/';

Lint at line 174 character 12: Identifier 'i' already declared as var*
for (var i=0; i<scripts.length; i++) {

Lint at line 180 character 14: Use '!==' to compare with ''.
if (base != '' && src.indexOf('://') == -1) {

Lint at line 199 character 23: Use '===' to compare with ''.
if (this.config.lang == '') this.config.lang = 'en';

Lint at line 199 character 30: Missing '{' before 'this'.
if (this.config.lang == '') this.config.lang = 'en';

Lint at line 203 character 19: Missing '{' before 'this'.
if (this.isMSIE) this.loadScript(this.config.baseroot + 'excanvas.js');

Lint at line 229 character 2: Missing ';'
}

Lint at line 238 character 21: Missing '{' before 'return'.
if (this.isLoaded) return true;

Lint at line 249 character 17: Line breaking error: ')'.
if (this.isMSIE)

Lint at line 250 character 2: Missing '{' before 'if'.
if (!window.CanvasRenderingContext2D && typeof G_vmlCanvasManager == "undefined") {

Lint at line 251 character 25: This is better written in dot notation.
this.log(this.strings['ERR_EXCANVAS_LOAD'], 2);//critical error

Lint at line 269 character 42: Line breaking error: ')'.
if (this.config.button_callbacks[i])

Lint at line 270 character 8: Missing '{' before 'this'.
this.addEvent(img, 'click', this.config.button_callbacks[i]);

Lint at line 271 character 34: This is better written in dot notation.
img.alt     = this.strings['HINT_ADD'];

Lint at line 272 character 34: This is better written in dot notation.
img.title   = this.strings['HINT_ADD'];

Lint at line 283 character 11: Identifier 'img' already declared as var*
var img = document.createElement("IMG");

Lint at line 287 character 42: Line breaking error: ')'.
if (this.config.button_callbacks[i])

Lint at line 288 character 8: Missing '{' before 'this'.
this.addEvent(img, 'click', this.config.button_callbacks[i]);

Lint at line 289 character 34: This is better written in dot notation.
img.alt     = this.strings['HINT_DELETE'];

Lint at line 290 character 34: This is better written in dot notation.
img.title   = this.strings['HINT_DELETE'];

Lint at line 301 character 11: Identifier 'img' already declared as var*
var img = document.createElement("IMG");

Lint at line 305 character 42: Line breaking error: ')'.
if (this.config.button_callbacks[i])

Lint at line 306 character 8: Missing '{' before 'this'.
this.addEvent(img, 'click', this.config.button_callbacks[i]);

Lint at line 307 character 34: This is better written in dot notation.
img.alt     = this.strings['HINT_PREVIEW'];

Lint at line 308 character 34: This is better written in dot notation.
img.title   = this.strings['HINT_PREVIEW'];

Lint at line 320 character 11: Identifier 'img' already declared as var*
var img = document.createElement("IMG");

Lint at line 324 character 42: Line breaking error: ')'.
if (this.config.button_callbacks[i])

Lint at line 325 character 8: Missing '{' before 'this'.
this.addEvent(img, 'click', this.config.button_callbacks[i]);

Lint at line 326 character 34: This is better written in dot notation.
img.alt     = this.strings['HINT_HTML'];

Lint at line 327 character 34: This is better written in dot notation.
img.title   = this.strings['HINT_HTML'];

Lint at line 338 character 11: Identifier 'img' already declared as var*
var img = document.createElement("IMG");

Lint at line 342 character 42: Line breaking error: ')'.
if (this.config.button_callbacks[i])

Lint at line 343 character 8: Missing '{' before 'this'.
this.addEvent(img, 'click', this.config.button_callbacks[i]);

Lint at line 344 character 34: This is better written in dot notation.
img.alt     = this.strings['HINT_CLIPBOARD'];

Lint at line 345 character 34: This is better written in dot notation.
img.title   = this.strings['HINT_CLIPBOARD'];

Lint at line 364 character 2: Missing ';'
}

Lint at line 385 character 2: Missing ';'
}

Lint at line 394 character 10: Use '===' to compare with ''.
if (url == '') return false;

Lint at line 394 character 17: Missing '{' before 'return'.
if (url == '') return false;

Lint at line 395 character 36: Missing '{' before 'return'.
if (this.loadedScripts[url] == 1) return true;

Lint at line 409 character 2: Missing ';'
}

Lint at line 415 character 2: Missing ';'
}

Lint at line 450 character 2: Missing ';'
}

Lint at line 459 character 29: Missing '{' before 'this'.
if (this.status_container) this.status_container.innerHTML = str;

Lint at line 461 character 2: Missing ';'
}

Lint at line 470 character 12: Use '===' to compare with ''.
if (level == '' || typeof level == 'undefined') level = 0;

Lint at line 470 character 50: Missing '{' before 'level'.
if (level == '' || typeof level == 'undefined') level = 0;

Lint at line 471 character 65: Line breaking error: ')'.
if (this.config.loglevel != -1 && level >= this.config.loglevel)

Lint at line 472 character 2: Missing '{' before 'this'.
this.logStore.push({level: level, obj: obj});

Lint at line 489 character 8: Missing '{' before 'window'.
else window.defaultStatus = (level + ': ' + obj);

Lint at line 491 character 2: Missing ';'
}

Lint at line 504 character 61: Use '!==' to compare with ''.
if (this.props[i].getElementsByTagName('input')[2].value != '') {

Lint at line 515 character 19: Use '===' to compare with ''.
if (this.mapname == '') this.mapname = 'imgmap' + now.getFullYear() + (now.getMonth()+1) + now.getDate() + now.getHours() + now.getMinutes() + now.getSeconds();

Lint at line 515 character 26: Missing '{' before 'this'.
if (this.mapname == '') this.mapname = 'imgmap' + now.getFullYear() + (now.getMonth()+1) + now.getDate() + now.getHours() + now.getMinutes() + now.getSeconds();

Lint at line 519 character 2: Missing ';'
}

Lint at line 531 character 2: Missing ';'
}

Lint at line 552 character 43: Missing '{' before 'return'.
if (!div.getElementsByTagName('map')[0]) return false;

Lint at line 561 character 30: Missing '{' before 'shape'.
if (shape == 'rect')      shape = 'rectangle'

Lint at line 561 character 38: Line breaking error: 'rectangle'.
if (shape == 'rect')      shape = 'rectangle'

Lint at line 561 character 47: Missing ';'
if (shape == 'rect')      shape = 'rectangle'

Lint at line 562 character 30: Missing '{' before 'shape'.
else if (shape == 'circ') shape = 'circle'

Lint at line 562 character 38: Line breaking error: 'circle'.
else if (shape == 'circ') shape = 'circle'

Lint at line 562 character 44: Missing ';'
else if (shape == 'circ') shape = 'circle'

Lint at line 563 character 30: Missing '{' before 'shape'.
else if (shape == 'poly') shape = 'polygon';

Lint at line 574 character 43: Missing '{' before 'this'.
if (newareas[i].getAttribute('href'))   this.props[id].getElementsByTagName('input')[3].value  = newareas[i].getAttribute('href');

Lint at line 575 character 43: Missing '{' before 'this'.
if (newareas[i].getAttribute('alt'))    this.props[id].getElementsByTagName('input')[4].value  = newareas[i].getAttribute('alt');

Lint at line 579 character 15: Use '===' to compare with ''.
if (target == '') target = '_self';

Lint at line 579 character 22: Missing '{' before 'target'.
if (target == '') target = '_self';

Lint at line 589 character 2: Missing ';'
}

Lint at line 599 character 17: Missing '{' before 'return'.
if (!this.pic) return false;//exit if pic is undefined

Lint at line 600 character 20: Use '===' to compare with '0'.
if (this.viewmode == 0) {

Lint at line 603 character 23: Missing '{' before 'this'.
if (this.areas[i]) this.areas[i].style.display = 'none';

Lint at line 607 character 12: Identifier 'i' already declared as var*
for (var i=0; i<nodes.length; i++) {

Lint at line 610 character 7: Identifier 'nodes' already declared as var*
var nodes = this.form_container.getElementsByTagName("select");

Lint at line 611 character 12: Identifier 'i' already declared as var*
for (var i=0; i<nodes.length; i++) {

Lint at line 623 character 35: This is better written in dot notation.
this.statusMessage(this.strings['PREVIEW_MODE']);

Lint at line 627 character 12: Identifier 'i' already declared as var*
for (var i=0; i<this.areas.length; i++) {

Lint at line 628 character 23: Missing '{' before 'this'.
if (this.areas[i]) this.areas[i].style.display = '';

Lint at line 631 character 7: Identifier 'nodes' already declared as var*
var nodes = this.form_container.getElementsByTagName("input");

Lint at line 632 character 12: Identifier 'i' already declared as var*
for (var i=0; i<nodes.length; i++) {

Lint at line 635 character 7: Identifier 'nodes' already declared as var*
var nodes = this.form_container.getElementsByTagName("select");

Lint at line 636 character 12: Identifier 'i' already declared as var*
for (var i=0; i<nodes.length; i++) {

Lint at line 648 character 35: This is better written in dot notation.
this.statusMessage(this.strings['DESIGN_MODE']);

Lint at line 650 character 2: Missing ';'
}

Lint at line 659 character 28: Missing '{' before 'return'.
if (this.viewmode == 1 ) return;//exit if preview mode

Lint at line 672 character 26: Line breaking error: ')'.
if (this.form_container)

Lint at line 673 character 4: Missing '{' before 'this'.
this.form_container.appendChild(this.props[id]);

Lint at line 681 character 31: Unclosed string: \
this.props[id].innerHTML = '\

Lint at line 681 character 31: Stopping, unable to continue.
this.props[id].innerHTML = '\

